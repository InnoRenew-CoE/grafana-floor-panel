{"version":3,"file":"module.js","mappings":"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","sources":["webpack://innorenew-iaq-panel/external amd \"@grafana/ui\"","webpack://innorenew-iaq-panel/external amd \"lodash\"","webpack://innorenew-iaq-panel/../node_modules/.pnpm/rainbowvis.js@1.1.1/node_modules/rainbowvis.js/rainbowvis.js","webpack://innorenew-iaq-panel/external amd \"@grafana/data\"","webpack://innorenew-iaq-panel/external amd \"react\"","webpack://innorenew-iaq-panel/webpack/bootstrap","webpack://innorenew-iaq-panel/webpack/runtime/compat get default export","webpack://innorenew-iaq-panel/webpack/runtime/define property getters","webpack://innorenew-iaq-panel/webpack/runtime/hasOwnProperty shorthand","webpack://innorenew-iaq-panel/webpack/runtime/make namespace object","webpack://innorenew-iaq-panel/../node_modules/.pnpm/dompurify@3.2.6/node_modules/dompurify/dist/purify.es.mjs","webpack://innorenew-iaq-panel/./components/SimplePanel.tsx","webpack://innorenew-iaq-panel/./components/RoomSensorPicker.tsx","webpack://innorenew-iaq-panel/./module.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__241__;","/*\nRainbowVis-JS \nReleased under Eclipse Public License - v 1.0\n*/\n\nfunction Rainbow()\n{\n\t\"use strict\";\n\tvar gradients = null;\n\tvar minNum = 0;\n\tvar maxNum = 100;\n\tvar colours = ['ff0000', 'ffff00', '00ff00', '0000ff']; \n\tsetColours(colours);\n\t\n\tfunction setColours (spectrum) \n\t{\n\t\tif (spectrum.length < 2) {\n\t\t\tthrow new Error('Rainbow must have two or more colours.');\n\t\t} else {\n\t\t\tvar increment = (maxNum - minNum)/(spectrum.length - 1);\n\t\t\tvar firstGradient = new ColourGradient();\n\t\t\tfirstGradient.setGradient(spectrum[0], spectrum[1]);\n\t\t\tfirstGradient.setNumberRange(minNum, minNum + increment);\n\t\t\tgradients = [ firstGradient ];\n\t\t\t\n\t\t\tfor (var i = 1; i < spectrum.length - 1; i++) {\n\t\t\t\tvar colourGradient = new ColourGradient();\n\t\t\t\tcolourGradient.setGradient(spectrum[i], spectrum[i + 1]);\n\t\t\t\tcolourGradient.setNumberRange(minNum + increment * i, minNum + increment * (i + 1)); \n\t\t\t\tgradients[i] = colourGradient; \n\t\t\t}\n\n\t\t\tcolours = spectrum;\n\t\t}\n\t}\n\n\tthis.setSpectrum = function () \n\t{\n\t\tsetColours(arguments);\n\t\treturn this;\n\t}\n\n\tthis.setSpectrumByArray = function (array)\n\t{\n\t\tsetColours(array);\n\t\treturn this;\n\t}\n\n\tthis.colourAt = function (number)\n\t{\n\t\tif (isNaN(number)) {\n\t\t\tthrow new TypeError(number + ' is not a number');\n\t\t} else if (gradients.length === 1) {\n\t\t\treturn gradients[0].colourAt(number);\n\t\t} else {\n\t\t\tvar segment = (maxNum - minNum)/(gradients.length);\n\t\t\tvar index = Math.min(Math.floor((Math.max(number, minNum) - minNum)/segment), gradients.length - 1);\n\t\t\treturn gradients[index].colourAt(number);\n\t\t}\n\t}\n\n\tthis.colorAt = this.colourAt;\n\n\tthis.setNumberRange = function (minNumber, maxNumber)\n\t{\n\t\tif (maxNumber > minNumber) {\n\t\t\tminNum = minNumber;\n\t\t\tmaxNum = maxNumber;\n\t\t\tsetColours(colours);\n\t\t} else {\n\t\t\tthrow new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n\t\t}\n\t\treturn this;\n\t}\n}\n\nfunction ColourGradient() \n{\n\t\"use strict\";\n\tvar startColour = 'ff0000';\n\tvar endColour = '0000ff';\n\tvar minNum = 0;\n\tvar maxNum = 100;\n\n\tthis.setGradient = function (colourStart, colourEnd)\n\t{\n\t\tstartColour = getHexColour(colourStart);\n\t\tendColour = getHexColour(colourEnd);\n\t}\n\n\tthis.setNumberRange = function (minNumber, maxNumber)\n\t{\n\t\tif (maxNumber > minNumber) {\n\t\t\tminNum = minNumber;\n\t\t\tmaxNum = maxNumber;\n\t\t} else {\n\t\t\tthrow new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n\t\t}\n\t}\n\n\tthis.colourAt = function (number)\n\t{\n\t\treturn calcHex(number, startColour.substring(0,2), endColour.substring(0,2)) \n\t\t\t+ calcHex(number, startColour.substring(2,4), endColour.substring(2,4)) \n\t\t\t+ calcHex(number, startColour.substring(4,6), endColour.substring(4,6));\n\t}\n\t\n\tfunction calcHex(number, channelStart_Base16, channelEnd_Base16)\n\t{\n\t\tvar num = number;\n\t\tif (num < minNum) {\n\t\t\tnum = minNum;\n\t\t}\n\t\tif (num > maxNum) {\n\t\t\tnum = maxNum;\n\t\t} \n\t\tvar numRange = maxNum - minNum;\n\t\tvar cStart_Base10 = parseInt(channelStart_Base16, 16);\n\t\tvar cEnd_Base10 = parseInt(channelEnd_Base16, 16); \n\t\tvar cPerUnit = (cEnd_Base10 - cStart_Base10)/numRange;\n\t\tvar c_Base10 = Math.round(cPerUnit * (num - minNum) + cStart_Base10);\n\t\treturn formatHex(c_Base10.toString(16));\n\t}\n\n\tfunction formatHex(hex) \n\t{\n\t\tif (hex.length === 1) {\n\t\t\treturn '0' + hex;\n\t\t} else {\n\t\t\treturn hex;\n\t\t}\n\t} \n\t\n\tfunction isHexColour(string)\n\t{\n\t\tvar regex = /^#?[0-9a-fA-F]{6}$/i;\n\t\treturn regex.test(string);\n\t}\n\n\tfunction getHexColour(string)\n\t{\n\t\tif (isHexColour(string)) {\n\t\t\treturn string.substring(string.length - 6, string.length);\n\t\t} else {\n\t\t\tvar name = string.toLowerCase();\n\t\t\tif (colourNames.hasOwnProperty(name)) {\n\t\t\t\treturn colourNames[name];\n\t\t\t}\n\t\t\tthrow new Error(string + ' is not a valid colour.');\n\t\t}\n\t}\n\t\n\t// Extended list of CSS colornames s taken from\n\t// http://www.w3.org/TR/css3-color/#svg-color\n\tvar colourNames = {\n\t\taliceblue: \"F0F8FF\",\n\t\tantiquewhite: \"FAEBD7\",\n\t\taqua: \"00FFFF\",\n\t\taquamarine: \"7FFFD4\",\n\t\tazure: \"F0FFFF\",\n\t\tbeige: \"F5F5DC\",\n\t\tbisque: \"FFE4C4\",\n\t\tblack: \"000000\",\n\t\tblanchedalmond: \"FFEBCD\",\n\t\tblue: \"0000FF\",\n\t\tblueviolet: \"8A2BE2\",\n\t\tbrown: \"A52A2A\",\n\t\tburlywood: \"DEB887\",\n\t\tcadetblue: \"5F9EA0\",\n\t\tchartreuse: \"7FFF00\",\n\t\tchocolate: \"D2691E\",\n\t\tcoral: \"FF7F50\",\n\t\tcornflowerblue: \"6495ED\",\n\t\tcornsilk: \"FFF8DC\",\n\t\tcrimson: \"DC143C\",\n\t\tcyan: \"00FFFF\",\n\t\tdarkblue: \"00008B\",\n\t\tdarkcyan: \"008B8B\",\n\t\tdarkgoldenrod: \"B8860B\",\n\t\tdarkgray: \"A9A9A9\",\n\t\tdarkgreen: \"006400\",\n\t\tdarkgrey: \"A9A9A9\",\n\t\tdarkkhaki: \"BDB76B\",\n\t\tdarkmagenta: \"8B008B\",\n\t\tdarkolivegreen: \"556B2F\",\n\t\tdarkorange: \"FF8C00\",\n\t\tdarkorchid: \"9932CC\",\n\t\tdarkred: \"8B0000\",\n\t\tdarksalmon: \"E9967A\",\n\t\tdarkseagreen: \"8FBC8F\",\n\t\tdarkslateblue: \"483D8B\",\n\t\tdarkslategray: \"2F4F4F\",\n\t\tdarkslategrey: \"2F4F4F\",\n\t\tdarkturquoise: \"00CED1\",\n\t\tdarkviolet: \"9400D3\",\n\t\tdeeppink: \"FF1493\",\n\t\tdeepskyblue: \"00BFFF\",\n\t\tdimgray: \"696969\",\n\t\tdimgrey: \"696969\",\n\t\tdodgerblue: \"1E90FF\",\n\t\tfirebrick: \"B22222\",\n\t\tfloralwhite: \"FFFAF0\",\n\t\tforestgreen: \"228B22\",\n\t\tfuchsia: \"FF00FF\",\n\t\tgainsboro: \"DCDCDC\",\n\t\tghostwhite: \"F8F8FF\",\n\t\tgold: \"FFD700\",\n\t\tgoldenrod: \"DAA520\",\n\t\tgray: \"808080\",\n\t\tgreen: \"008000\",\n\t\tgreenyellow: \"ADFF2F\",\n\t\tgrey: \"808080\",\n\t\thoneydew: \"F0FFF0\",\n\t\thotpink: \"FF69B4\",\n\t\tindianred: \"CD5C5C\",\n\t\tindigo: \"4B0082\",\n\t\tivory: \"FFFFF0\",\n\t\tkhaki: \"F0E68C\",\n\t\tlavender: \"E6E6FA\",\n\t\tlavenderblush: \"FFF0F5\",\n\t\tlawngreen: \"7CFC00\",\n\t\tlemonchiffon: \"FFFACD\",\n\t\tlightblue: \"ADD8E6\",\n\t\tlightcoral: \"F08080\",\n\t\tlightcyan: \"E0FFFF\",\n\t\tlightgoldenrodyellow: \"FAFAD2\",\n\t\tlightgray: \"D3D3D3\",\n\t\tlightgreen: \"90EE90\",\n\t\tlightgrey: \"D3D3D3\",\n\t\tlightpink: \"FFB6C1\",\n\t\tlightsalmon: \"FFA07A\",\n\t\tlightseagreen: \"20B2AA\",\n\t\tlightskyblue: \"87CEFA\",\n\t\tlightslategray: \"778899\",\n\t\tlightslategrey: \"778899\",\n\t\tlightsteelblue: \"B0C4DE\",\n\t\tlightyellow: \"FFFFE0\",\n\t\tlime: \"00FF00\",\n\t\tlimegreen: \"32CD32\",\n\t\tlinen: \"FAF0E6\",\n\t\tmagenta: \"FF00FF\",\n\t\tmaroon: \"800000\",\n\t\tmediumaquamarine: \"66CDAA\",\n\t\tmediumblue: \"0000CD\",\n\t\tmediumorchid: \"BA55D3\",\n\t\tmediumpurple: \"9370DB\",\n\t\tmediumseagreen: \"3CB371\",\n\t\tmediumslateblue: \"7B68EE\",\n\t\tmediumspringgreen: \"00FA9A\",\n\t\tmediumturquoise: \"48D1CC\",\n\t\tmediumvioletred: \"C71585\",\n\t\tmidnightblue: \"191970\",\n\t\tmintcream: \"F5FFFA\",\n\t\tmistyrose: \"FFE4E1\",\n\t\tmoccasin: \"FFE4B5\",\n\t\tnavajowhite: \"FFDEAD\",\n\t\tnavy: \"000080\",\n\t\toldlace: \"FDF5E6\",\n\t\tolive: \"808000\",\n\t\tolivedrab: \"6B8E23\",\n\t\torange: \"FFA500\",\n\t\torangered: \"FF4500\",\n\t\torchid: \"DA70D6\",\n\t\tpalegoldenrod: \"EEE8AA\",\n\t\tpalegreen: \"98FB98\",\n\t\tpaleturquoise: \"AFEEEE\",\n\t\tpalevioletred: \"DB7093\",\n\t\tpapayawhip: \"FFEFD5\",\n\t\tpeachpuff: \"FFDAB9\",\n\t\tperu: \"CD853F\",\n\t\tpink: \"FFC0CB\",\n\t\tplum: \"DDA0DD\",\n\t\tpowderblue: \"B0E0E6\",\n\t\tpurple: \"800080\",\n\t\tred: \"FF0000\",\n\t\trosybrown: \"BC8F8F\",\n\t\troyalblue: \"4169E1\",\n\t\tsaddlebrown: \"8B4513\",\n\t\tsalmon: \"FA8072\",\n\t\tsandybrown: \"F4A460\",\n\t\tseagreen: \"2E8B57\",\n\t\tseashell: \"FFF5EE\",\n\t\tsienna: \"A0522D\",\n\t\tsilver: \"C0C0C0\",\n\t\tskyblue: \"87CEEB\",\n\t\tslateblue: \"6A5ACD\",\n\t\tslategray: \"708090\",\n\t\tslategrey: \"708090\",\n\t\tsnow: \"FFFAFA\",\n\t\tspringgreen: \"00FF7F\",\n\t\tsteelblue: \"4682B4\",\n\t\ttan: \"D2B48C\",\n\t\tteal: \"008080\",\n\t\tthistle: \"D8BFD8\",\n\t\ttomato: \"FF6347\",\n\t\tturquoise: \"40E0D0\",\n\t\tviolet: \"EE82EE\",\n\t\twheat: \"F5DEB3\",\n\t\twhite: \"FFFFFF\",\n\t\twhitesmoke: \"F5F5F5\",\n\t\tyellow: \"FFFF00\",\n\t\tyellowgreen: \"9ACD32\"\n\t}\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = Rainbow;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*! @license DOMPurify 3.2.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.6';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (SAFE_FOR_XML && currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","import React, { useCallback, useState } from 'react';\nimport { FieldColorModeId, fieldColorModeRegistry } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\nimport { Props } from '../@types/PanelProps';\nimport { SensorData, Series } from '../@types/QueryData';\nimport { Room, Wall } from '../@types/Graphics';\nimport Rainbow from 'rainbowvis.js';\nimport { now } from 'lodash';\nimport DOMPurify from 'dompurify';\n\ntype Color = {\n  name: string;\n  value: number;\n};\n\nexport const SimplePanel: React.FC<Props> = ({ options, data, width, height, fieldConfig }) => {\n  const [id] = useState(() => now());\n  let theme = useTheme2();\n  const fieldColor = fieldConfig.defaults.color || { mode: FieldColorModeId.ContinuousGrYlRd };\n  const fieldColorMode = fieldColorModeRegistry.get(fieldColor.mode);\n  const [metrics] = useState(() => new Map<string, number>());\n  const [rooms, setRooms] = useState<Room[]>(() => []);\n  const [walls, setWalls] = useState<Wall[]>(() => []);\n  const [interval] = useState({ id: 0 });\n  const [roomRainbow] = useState(() => new Rainbow());\n  const [wallRainbow] = useState(() => new Rainbow());\n  const [container, setContainer] = useState<SVGElement | undefined>(undefined);\n  const [settings] = useState<{ colors: Color[] }>(() => ({ colors: [{ name: 'transparent', value: 0 }] }));\n  const [lastUpdate, setLastUpdate] = useState<number>(0);\n\n  if (fieldColorMode.getColors) {\n    const colors = fieldColorMode.getColors(theme);\n    settings.colors = colors.map((x, i) => ({ name: x, value: i / colors.length }));\n  } else if (fieldColorMode.id === 'thresholds') {\n    const colors =\n      fieldConfig.defaults.thresholds?.steps.map((x) => ({ name: x.color, value: Math.max(x.value, 0) })) ?? [];\n    settings.colors = colors.sort((a, b) => a.value - b.value);\n  }\n  roomRainbow.setSpectrumByArray(settings.colors.map((x) => theme.visualization.getColorByName(x.name)));\n  wallRainbow.setSpectrumByArray(['yellow', 'green', 'cyan']);\n\n  const allRooms: Room[] = parseRooms(options.svg).map((name) => ({ name: name, quality: 80 }));\n  if (allRooms.some((x) => !rooms.some((y) => x.name === y.name))) {\n    setRooms(allRooms);\n  }\n\n  const allWalls: Wall[] = parseWalls(options.svg).map((name) => ({ name: name, humidity: 30 }));\n  if (allWalls.some((x) => !walls.some((y) => x.name === y.name))) {\n    setWalls(allWalls);\n  }\n\n  if (now() - lastUpdate > 3000) {\n    setLastUpdate(now());\n    const measurements: SensorData[] = mapData(data.series as unknown as Series[]);\n    const sensorMappings: Map<string, string> = new Map(\n      options.sensorMappings ? JSON.parse(options.sensorMappings) : []\n    );\n\n    for (let sensorData of measurements) {\n      const name = sensorMappings.get(sensorData.id);\n      if (!name) continue;\n      const values = sensorData.values;\n      const woodMoistureContent = values.get('wood_mc');\n      if (!woodMoistureContent) {\n        const iaq = calculateIAQ(\n          values.get('CO2') || values.get('co2') || 0.0,\n          values.get('temperature') || 0.0,\n          0,\n          values.get('VOC_index') || 0.0\n        ); // + random(-50, 50, false);\n        metrics.set(name, iaq);\n      } else {\n        metrics.set(name, woodMoistureContent);\n      }\n    }\n  }\n\n  clearInterval(interval.id);\n  if (container) {\n    interval.id = window.setInterval(\n      () =>\n        animateQualityTransition(\n          id,\n          roomRainbow,\n          wallRainbow,\n          settings.colors,\n          container,\n          rooms,\n          walls,\n          metrics,\n          interval.id\n        ),\n      50\n    );\n  }\n\n  const svgRef = useCallback(\n    (node: any) => {\n      if (node instanceof HTMLElement) {\n        node.innerHTML = DOMPurify.sanitize(options.svg);\n        const svg = node.getElementsByTagName('svg')[0];\n        if (svg) {\n          setContainer(svg);\n          svg.removeAttribute('width');\n          svg.removeAttribute('height');\n        }\n      }\n    },\n    [options]\n  );\n  const colorsCount = settings.colors.length;\n  const firstColor = theme.visualization.getColorByName(settings.colors[0].name);\n  const lastColor = theme.visualization.getColorByName(settings.colors[colorsCount - 1].name);\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gap: '2em',\n        gridTemplateRows: '1fr auto',\n        flexWrap: 'wrap',\n        width: width,\n        height: height,\n      }}\n    >\n      <div\n        ref={svgRef}\n        style={{\n          overflow: 'hidden',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'stretch',\n          justifyContent: 'center',\n        }}\n      ></div>\n\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        <div style={{ maxWidth: '300px', width: '80%' }}>\n          <div\n            style={{\n              borderRadius: '3px',\n              padding: '0.5em',\n              background: `linear-gradient(90deg, ${firstColor} 0%, ${lastColor} 100%)`,\n            }}\n          ></div>\n          <div style={{ display: 'flex', alignItems: 'stretch', justifyContent: 'space-between' }}>\n            <span>Bad</span>\n            <span>Good</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport function mapData(series: Series[]) {\n  return series\n    .map((s) => {\n      const time = (s.fields.find((x) => x.name === '_time')?.values?.get(0) as number) ?? Date.now();\n      const fieldOrder = s.fields.find((x) => x.name === '_field');\n      if (!fieldOrder) return null;\n      const fields = fieldOrder.values;\n      const sensorId = fieldOrder.labels.sensor_id;\n      const fieldValues = s.fields.find((x) => x.name === '_value')?.values ?? [];\n      const valueMap = new Map<string, number>();\n      for (let i = 0; i < fields.length; i++) {\n        valueMap.set(fields[i], parseFloat(fieldValues[i]));\n      }\n      return { id: sensorId, values: valueMap, time: time } as SensorData;\n    })\n    .filter((x) => x) as SensorData[];\n}\n\n/**\n * Slowly and smoothly recolors rooms to avoid flickering\n * @param roomRainbow\n * @param colors\n * @param container\n * @param rooms\n * @param metrics\n * @param intervalId\n */\nfunction animateQualityTransition(\n  id: number,\n  roomRainbow: Rainbow,\n  wallRainbow: Rainbow,\n  colors: Color[],\n  container: SVGElement,\n  rooms: Room[],\n  walls: Wall[],\n  metrics: Map<string, number>,\n  intervalId: number\n) {\n  const roomsToRedraw = rooms.filter((room) => {\n    const metric = metrics.get(room.name);\n    if (!metric) return false;\n    return metric !== room.quality;\n  });\n\n  const wallsToRedraw = walls.filter((wall) => {\n    const metric = metrics.get(wall.name);\n    if (!metric) return false;\n    return metric !== wall.humidity;\n  });\n\n  roomsToRedraw.forEach((room) => {\n    const desiredIAQ = metrics.get(room.name);\n    if (desiredIAQ) {\n      const difference = Math.abs(desiredIAQ - room.quality);\n      const add = desiredIAQ > room.quality ? 1 : -1;\n      room.quality += add * Math.min(difference, 1);\n    }\n  });\n\n  wallsToRedraw.forEach((wall) => {\n    const desiredHumidity = metrics.get(wall.name);\n    if (desiredHumidity) {\n      const difference = Math.abs(desiredHumidity - wall.humidity);\n      const add = desiredHumidity > wall.humidity ? 1 : -1;\n      wall.humidity += add * Math.min(difference, 1);\n    }\n  });\n\n  rooms\n    .filter((r) => metrics.get(r.name))\n    .forEach((room) => {\n      const roomElement = container.querySelector(`#room\\\\:${room.name.replace(/\\./g, '\\\\.')}`);\n      if (roomElement) {\n        createOrModifyRadialGradient(id, container, { name: roomRainbow.colorAt(room.quality), value: 0 }, room);\n        roomElement.setAttribute('fill', `url(#rg-${id}-${room.name})`);\n        //roomElement.setAttribute(\"fill\", `#${rainbow.colorAt(room.quality)}`)\n        roomElement.setAttribute('fill-opacity', '1');\n      }\n    });\n\n  walls\n    .filter((wall) => metrics.get(wall.name))\n    .forEach((wall) => {\n      const wallElement = container.querySelector(`#wall\\\\:${wall.name.replace(/\\./g, '\\\\.')}`);\n      if (wallElement) {\n        for (const child of wallElement.children) {\n          colorWall(id, container, { name: wallRainbow.colorAt(wall.humidity), value: 0 }, wall);\n          child.setAttribute('fill', `url(#wg-${id}-${wall.name})`);\n          child.setAttribute('fill-opacity', `${wall.humidity / 30}`);\n        }\n      }\n    });\n  if (roomsToRedraw.length === 0 && wallsToRedraw.length === 0) {\n    clearInterval(intervalId);\n  }\n}\n\n/**\n * Calculates Indoor Air Quality based on a few parameters.\n * @param co2\n * @param temp\n * @param rh\n * @param voc\n */\nfunction calculateIAQ(co2: number, temp: number, rh: number, voc: number) {\n  const co2Index = Math.min(6, Math.round(co2 / 400)); // 1 - 6\n  const vocIndex = Math.min(6, Math.round(voc / 50)); // 1 - 6\n  const worstOfTheTwo = Math.max(co2Index, vocIndex);\n  const worst = 6;\n  const aqi = Math.min(Math.max(0, 100.0 - 100 * (co2Index / worst)), 100);\n  return aqi ?? 0.0;\n}\n\nexport function parseRooms(svg: string) {\n  const parser = new DOMParser();\n  const parsed = parser.parseFromString(svg, 'image/svg+xml');\n  const rooms = parsed.querySelectorAll('[id*=\"room\"]');\n  const roomNames: string[] = [...rooms].map((x) => x.id.replace(/room:/g, ''));\n  return roomNames;\n}\n\nexport function parseWalls(svg: string) {\n  const parser = new DOMParser();\n  const parsed = parser.parseFromString(svg, 'image/svg+xml');\n  const walls = parsed.querySelectorAll('[id*=\"wall:\"]');\n  const wallNames: string[] = [...walls].map((x) => x.id.replace(/wall:/g, ''));\n  return wallNames;\n}\n\nfunction createOrModifyRadialGradient(id: number, container: SVGElement, rightColor: Color, room: Room) {\n  let gradientElement = container.querySelector(`#rg-${id}-${room.name.replace(/\\./g, '\\\\.')}`);\n  if (!gradientElement) {\n    gradientElement = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n    gradientElement.setAttribute('id', `rg-${id}-${room.name}`);\n    container.appendChild(gradientElement);\n  }\n  gradientElement.setAttribute('r', '0%');\n  gradientElement.innerHTML = `\n    <stop offset=\"0.1\" stop-color=\"transparent\" />\n    <stop offset=\"1\" stop-color=\"#${rightColor.name}\" />\n    `;\n}\n\nfunction colorWall(id: number, container: SVGElement, rightColor: Color, wall: Wall) {\n  let gradientElement = container.querySelector(`#wg-${id}-${wall.name.replace(/\\./g, '\\\\.')}`);\n  if (!gradientElement) {\n    gradientElement = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n    gradientElement.setAttribute('id', `wg-${id}-${wall.name}`);\n    container.appendChild(gradientElement);\n  }\n  gradientElement.setAttribute('r', '0%');\n  gradientElement.innerHTML = `\n    <stop offset=\"0.1\" stop-color=\"transparent\" />\n    <stop offset=\"1\" stop-color=\"#${rightColor.name}\" />\n    `;\n}\n","import React from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { Select } from '@grafana/ui';\nimport { SensorData, Series } from '../@types/QueryData';\nimport { mapData, parseRooms, parseWalls } from './SimplePanel';\n\nexport const RoomSensorPicker = ({ value, onChange, context }: StandardEditorProps<string>) => {\n  const options = context?.options;\n  const series = (context?.data ?? []) as unknown as Series[];\n  if (!series || !options.svg || series.length === 0) {\n    return <div>No sensors detected yet!</div>;\n  }\n  const roomNames = parseRooms(options.svg);\n  const wallNames = parseWalls(options.svg);\n  const sensorData: SensorData[] = mapData(series);\n  const sensorNames = [...new Set(sensorData.map((x) => x.id))].map((id, index) => ({\n    label: id,\n    value: id,\n    key: index,\n  }));\n\n  const map: Map<string, string> = new Map(value ? JSON.parse(value as string) : []);\n  const update = (name: string, sensor: string | undefined) => {\n    if (!sensor) {\n      const [key, value] = Array.from(map.entries()).find(([s, r]) => r === name) ?? ['-', '-'];\n      map.delete(key);\n    } else {\n      map.set(sensor, name);\n    }\n    const stringified = JSON.stringify(Array.from(map.entries()));\n    onChange(stringified);\n  };\n\n  return (\n    <div>\n      <table style={{ width: '100%' }}>\n        <thead style={{ borderBottom: '1px solid rgba(255,255,255, .3)' }}>\n          <tr>\n            <th>Room</th>\n            <th style={{ float: 'right' }}>Sensor</th>\n          </tr>\n        </thead>\n        <tbody>\n          {roomNames.map((name) => {\n            const existingMapping = sensorNames.find((x) => map.get(x.value) === name) || null;\n            return (\n              <tr key={name}>\n                <td style={{ padding: '0.5em 0' }}>{name}</td>\n                <td style={{ padding: '0.5em 0' }}>\n                  <div>\n                    <Select\n                      value={existingMapping}\n                      isClearable={true}\n                      onChange={(e) => update(name, e?.value as string)}\n                      options={sensorNames}\n                    />\n                  </div>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <table style={{ width: '100%' }}>\n        <thead style={{ borderBottom: '1px solid rgba(255,255,255, .3)' }}>\n          <tr>\n            <th>Wall</th>\n            <th style={{ float: 'right' }}>Sensor</th>\n          </tr>\n        </thead>\n        <tbody>\n          {wallNames.map((name) => {\n            const existingMapping = sensorNames.find((x) => map.get(x.value) === name) || null;\n            return (\n              <tr key={name}>\n                <td style={{ padding: '0.5em 0' }}>{name}</td>\n                <td style={{ padding: '0.5em 0' }}>\n                  <div>\n                    <Select\n                      value={existingMapping}\n                      isClearable={true}\n                      onChange={(e) => update(name, e?.value as string)}\n                      options={sensorNames}\n                    />\n                  </div>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import {PanelPlugin} from '@grafana/data';\nimport {SimpleOptions} from './types';\nimport {SimplePanel} from './components/SimplePanel';\nimport {RoomSensorPicker} from \"./components/RoomSensorPicker\";\n\nexport const plugin = new PanelPlugin<SimpleOptions>(SimplePanel)\n        .useFieldConfig()\n        .setPanelOptions(builder => {\n            builder.addTextInput({\n                name: \"Floor plan SVG\",\n                path: \"svg\",\n                settings: {useTextarea: true},\n                defaultValue: ``,\n                category: [\"Floor Plan\"]\n            })\n            builder.addCustomEditor({\n                editor: RoomSensorPicker,\n                id: \"sensorMappings\",\n                name: \"Sensor picker\",\n                path: 'sensorMappings',\n                category: [\"Floor Plan\"],\n            })\n        })\n    // { \"rooms\": [], \"objects\": [] }\n;\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__241__","ColourGradient","startColour","endColour","minNum","maxNum","calcHex","number","channelStart_Base16","channelEnd_Base16","num","hex","numRange","cStart_Base10","parseInt","cPerUnit","Math","round","toString","length","getHexColour","string","test","isHexColour","substring","name","toLowerCase","colourNames","hasOwnProperty","Error","this","setGradient","colourStart","colourEnd","setNumberRange","minNumber","maxNumber","RangeError","colourAt","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","gradients","colours","setColours","spectrum","increment","firstGradient","i","colourGradient","setSpectrum","arguments","setSpectrumByArray","array","isNaN","TypeError","segment","index","min","floor","max","colorAt","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__959__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","call","r","Symbol","toStringTag","value","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","forEach","arrayLastIndexOf","lastIndexOf","arrayPop","pop","arrayPush","push","arraySplice","splice","stringToLowerCase","String","stringToString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","objectHasOwnProperty","regExpTest","RegExp","typeErrorCreate","func","_len2","_key2","thisArg","lastIndex","_len","_key","addToSet","set","transformCaseFunc","l","element","lcElement","cleanArray","clone","object","newObject","property","isArray","constructor","lookupGetter","desc","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","getGlobal","window","purify","createDOMPurify","DOMPurify","root","version","removed","document","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","trustedTypes","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","createHTML","createScriptURL","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","scriptUrl","_","console","warn","_createTrustedTypesPolicy","ALL_SVG_TAGS","ALL_MATHML_TAGS","_forceRemove","node","removeChild","_removeAttribute","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","textContent","attributes","namespaceURI","hasChildNodes","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","tagName","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childClone","__removalCount","parent","parentTagName","Boolean","_checkValidNamespace","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","initValue","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks","mapData","series","map","s","time","fields","find","values","Date","now","fieldOrder","sensorId","labels","sensor_id","fieldValues","valueMap","Map","parseFloat","id","filter","calculateIAQ","co2","temp","rh","voc","co2Index","vocIndex","aqi","parseRooms","querySelectorAll","parseWalls","colorWall","container","rightColor","wall","gradientElement","querySelector","createElementNS","RoomSensorPicker","onChange","context","options","div","roomNames","wallNames","sensorData","sensorNames","Set","label","JSON","parse","update","sensor","delete","stringified","stringify","style","width","thead","borderBottom","tr","th","float","existingMapping","td","padding","Select","isClearable","e","plugin","PanelPlugin","height","fieldConfig","useState","theme","useTheme2","fieldColor","defaults","color","mode","FieldColorModeId","ContinuousGrYlRd","fieldColorMode","fieldColorModeRegistry","metrics","rooms","setRooms","walls","setWalls","interval","roomRainbow","Rainbow","wallRainbow","setContainer","settings","colors","lastUpdate","setLastUpdate","getColors","thresholds","steps","sort","b","visualization","getColorByName","allRooms","quality","some","y","allWalls","humidity","measurements","sensorMappings","woodMoistureContent","iaq","clearInterval","setInterval","intervalId","roomsToRedraw","room","metric","wallsToRedraw","desiredIAQ","difference","abs","add","desiredHumidity","roomElement","createOrModifyRadialGradient","wallElement","child","children","animateQualityTransition","svgRef","useCallback","HTMLElement","colorsCount","firstColor","lastColor","display","gap","gridTemplateRows","flexWrap","ref","overflow","alignItems","justifyContent","maxWidth","borderRadius","background","span","useFieldConfig","setPanelOptions","builder","addTextInput","path","useTextarea","defaultValue","category","addCustomEditor","editor"],"sourceRoot":""}